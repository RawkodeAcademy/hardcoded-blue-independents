#!/usr/bin/env bash
set -euo pipefail

# Preflight: docker and buildx
if ! command -v docker >/dev/null 2>&1; then
  echo "docker CLI not found" >&2
  exit 1
fi
if ! docker buildx version >/dev/null 2>&1; then
  echo "docker buildx not available. Please enable Buildx (Docker Desktop or: 'docker buildx create --use --name multi && docker buildx inspect --bootstrap')." >&2
  exit 1
fi

# Config
TTL=${TTL:-24h}
PREFIX=${PREFIX:-text-analyzer}
PLATFORMS=${PLATFORMS:-linux/amd64,linux/arm64}
INSPECT_PLATFORMS=${INSPECT_PLATFORMS:-true}
SERVICES=(
  normalized
  transliterated
  slug
  tokens
  unique_words
  bigram_count
  char_count
  unique_chars
  hash64
  entropy
  palindrome
)

random_suffix() {
  if command -v hexdump >/dev/null 2>&1; then
    hexdump -n3 -v -e '/1 "%02x"' /dev/urandom
  else
    dd if=/dev/urandom bs=3 count=1 2>/dev/null | od -An -v -tx1 | tr -d ' \n'
  fi
}

SUFFIX=$(random_suffix)

OUT_ENV=${OUT_ENV:-images.env}
: >"${OUT_ENV}"
echo "# Generated by scripts/publish-ttl.sh on $(date)" >>"${OUT_ENV}"
echo "TTL=${TTL}" >>"${OUT_ENV}"
echo "PREFIX=${PREFIX}" >>"${OUT_ENV}"
echo "SUFFIX=${SUFFIX}" >>"${OUT_ENV}"
echo "PLATFORMS=${PLATFORMS}" >>"${OUT_ENV}"

# Build and push service images (multi-arch)
for svc in "${SERVICES[@]}"; do
  tag="ttl.sh/${PREFIX}-${svc}-${SUFFIX}:${TTL}"
  echo "\nBuilding service image for ${svc} -> ${tag} (platforms: ${PLATFORMS})"
  docker buildx build \
    --platform "${PLATFORMS}" \
    --build-arg SERVICE_NAME="${svc}" \
    -f Dockerfile.service \
    -t "${tag}" \
    --push \
    .
  UPPER=$(echo "${svc}" | tr 'a-z' 'A-Z')
  echo "IMAGE_${UPPER}=${tag}" >>"${OUT_ENV}"
  printf '%-14s %s\n' "${svc}:" "${tag}" >&2
  if [[ "${INSPECT_PLATFORMS}" == "true" ]]; then
    docker buildx imagetools inspect "${tag}" | sed -n '1,40p' >&2 || true
  fi
done

# Build and push aggregator image (multi-arch)
agg_tag="ttl.sh/${PREFIX}-aggregator-${SUFFIX}:${TTL}"
echo "\nBuilding aggregator image -> ${agg_tag} (platforms: ${PLATFORMS})"
docker buildx build \
  --platform "${PLATFORMS}" \
  -f Dockerfile.aggregator \
  -t "${agg_tag}" \
  --push \
  .

echo "IMAGE_AGGREGATOR=${agg_tag}" >>"${OUT_ENV}"

# Summary
echo "\nPushed images:" >&2
for svc in "${SERVICES[@]}"; do
  UPPER=$(echo "${svc}" | tr 'a-z' 'A-Z')
  printf '%-14s %s\n' "${svc}:" "$(grep "^IMAGE_${UPPER}=" "${OUT_ENV}" | cut -d= -f2-)" >&2
done
printf '%-14s %s\n' "aggregator:" "${agg_tag}" >&2

if [[ "${INSPECT_PLATFORMS}" == "true" ]]; then
  echo "\nAggregator platforms:" >&2
  docker buildx imagetools inspect "${agg_tag}" | sed -n '1,40p' >&2 || true
fi

echo "\nWrote image tags to ${OUT_ENV}" >&2
